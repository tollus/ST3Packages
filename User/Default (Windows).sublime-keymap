[
	{ "keys": ["ctrl+t"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
    { "keys": ["alt+w"], "command": "toggle_setting", "args": { "setting": "word_wrap" } },
	{ "keys": ["ctrl+shift+c"], "command": "toggle_comment", "args": { "block": true } },


    /****** HTML SNIPPETS ******/

	{
		"keys": ["ctrl+b"], "command": "insert_snippet",
		"args": {"contents": "<strong>$SELECTION<\/strong>$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},

    /****** COLDFUSION SNIPPETS ******/

	{
		"keys": ["alt+shift+e","alt+shift+e"], "command": "insert_snippet",
		"args": {"contents": "Request.HtmlFormatCheckBlank($SELECTION)$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},
	{
		"keys": ["alt+shift+e","alt+shift+w"], "command": "insert_snippet",
		"args": {"contents": "#Request.HtmlFormatCheckBlank(\"$SELECTION\")#$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},
	{
		"keys": ["alt+shift+e","alt+shift+r"], "command": "insert_snippet",
		"args": {"contents": "Request.HtmlFormatCheckBlank($SELECTION, \"${1:Text When Blank}\")$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},
	{
		"keys": ["alt+shift+e","alt+shift+f"], "command": "insert_snippet",
		"args": {"contents": "HtmlEditFormat($SELECTION)$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},
	{
		"keys": ["alt+shift+e","alt+shift+u"], "command": "insert_snippet",
		"args": {"contents": "URLEncodedFormat($SELECTION)$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},
	{
		"keys": ["alt+shift+e","alt+shift+j"], "command": "insert_snippet",
		"args": {"contents": "Request.JSFix($SELECTION)$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},
	{
		"keys": ["alt+shift+c"], "command": "insert_snippet",
		"args": {"contents": "cfmodule template=\"$0$SELECTION.cfm\""},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" },
       		{ "key": "selection_empty", "operator": "equal", "operand": false }
	   	]},
	{
		"keys": ["alt+shift+e","alt+shift+s"], "command": "insert_snippet",
		"args": {"contents": "Request.SanitizeHtml($SELECTION)$0"},
		"context": [
	      	{ "key": "selector", "operator": "equal", "operand": "text.html.cfm" }
	   	]},


  { "keys": ["ctrl+shift+."], "command": "insert", "args": {"characters": "<"} },
  { "keys": ["ctrl+."], "command": "insert", "args": {"characters": ","} },


	// Auto-pair single `ticks`
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
		]
	},

	/** HTML-CSS-JS Prettify **/
	{ "keys": ["ctrl+shift+r"], "command": "htmlprettify" }
]
